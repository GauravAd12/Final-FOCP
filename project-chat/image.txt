# import json
# import random
# import datetime
# from termcolor import colored
# import time

# # Load keywords and responses from a JSON file
# def load_responses(file_path):
#     with open(file_path, 'r') as file:
#         return json.load(file)

# def save_chat_log(log_file, chat_log):
#     with open(log_file, 'a') as file:
#         for entry in chat_log:
#             file.write(f"{entry}\n")

# # Generate a random agent name
# def generate_agent_name():
#     agent_names = ["Alex", "Taylor", "Jordan", "Morgan", "Sam"]
#     return random.choice(agent_names)

# # Beautify text output
# def print_colored(text, color="blue"):
#     print(colored(text, color))

# # Simulate typing delay
# def typewriter_effect(text, color="blue", delay=0.05):
#     for char in text:
#         print(colored(char, color), end='', flush=True)
#         time.sleep(delay)
#     print()

# # Chatbot function
# def chatbot():
#     responses = load_responses('responses.json')
#     chat_log = []
#     print_colored("Welcome! Please enter your name: ", "green")
#     user_name = input().strip()
#     agent_name = generate_agent_name()
#     typewriter_effect(f"Hello {user_name}! I am {agent_name}, your assistant. How can I help you today?", "green")

#     while True:
#         user_input = input(colored(f"{user_name}: ", "cyan")).strip().lower()
#         chat_log.append(f"{user_name}: {user_input}")

#         if user_input in ["bye", "quit", "exit"]:
#             typewriter_effect(f"{agent_name}: Goodbye {user_name}! Have a great day!", "yellow")
#             chat_log.append(f"{agent_name}: Goodbye {user_name}! Have a great day!")
#             break

#         # Randomly disconnect
#         if random.random() < 0.05:
#             typewriter_effect(f"{agent_name}: Oops! I seem to have disconnected. Please try again later.", "red")
#             chat_log.append(f"{agent_name}: Oops! I seem to have disconnected.")
#             break

#         # Check for keywords
#         response_found = False
#         for keyword, response in responses.items():
#             if keyword in user_input:
#                 typewriter_effect(f"{agent_name}: {response.replace('{name}', user_name)}", "yellow")
#                 chat_log.append(f"{agent_name}: {response.replace('{name}', user_name)}")
#                 response_found = True
#                 break

#         # Default random response
#         if not response_found:
#             random_response = random.choice(responses["random"])
#             typewriter_effect(f"{agent_name}: {random_response}", "yellow")
#             chat_log.append(f"{agent_name}: {random_response}")

#     save_chat_log("chat_log.txt", chat_log)

# if __name__ == "__main__":
#     chatbot()